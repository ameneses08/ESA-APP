import sqlite3

class ServiceProviderDatabase:
    def _init_(self, db_file):
        self.db_file = db_file
        self.conn = None

    def connect(self):
        self.conn = sqlite3.connect(self.db_file)

    def close(self):
        if self.conn:
            self.conn.close()

# Define the search functions
def search_by_name(db, name):
    cursor = db.conn.cursor()
    try:
        cursor.execute('''
            SELECT * FROM service_providers
            WHERE name = ?
        ''', (name,))
        rows = cursor.fetchall()

        print_results(rows)
    except sqlite3.Error as e:
        print(f"Error during search by name: {e}")
    finally:
        db.close()

def search_by_sector(db, sector):
    cursor = db.conn.cursor()
    try:
        cursor.execute('''
            SELECT * FROM service_providers
            WHERE sector = ?
            ORDER BY rating DESC
        ''', (sector,))
        rows = cursor.fetchall()

        print_results(rows)
    except sqlite3.Error as e:
        print(f"Error during search by sector: {e}")
    finally:
        db.close()

def search_by_rating(db, rating):
    cursor = db.conn.cursor()
    try:
        cursor.execute('''
            SELECT * FROM service_providers
            WHERE rating >= ?
            ORDER BY rating DESC
        ''', (rating,))
        rows = cursor.fetchall()

        print_results(rows)
    except sqlite3.Error as e:
        print(f"Error during search by rating: {e}")
    finally:
        db.close()

def print_results(rows):
    if not rows:
        print("No results found.")
    else:
        for row in rows:
            print(row)

if _name_ == "_main_":
    try:
        db = ServiceProviderDatabase('service_providers.db')
        db.connect()

        search_criteria = input("Enter search criteria (name, sector, or rating): ").lower()

        if search_criteria == "name":
            name_to_search = input("Enter the name to search: ")
            search_by_name(db, name_to_search)
        elif search_criteria == "sector":
            sector_to_search = input("Enter the sector to search: ")
            search_by_sector(db, sector_to_search)
        elif search_criteria == "rating":
            rating_to_search = float(input("Enter the minimum rating to search: "))
            search_by_rating(db, rating_to_search)
        else:
            print("Invalid search criteria. Please enter 'name', 'sector', or 'rating'.")
    except sqlite3.Error as e:
        print(f"Error: {e}")
    finally:
        if db:
            db.close()
